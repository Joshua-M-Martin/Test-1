predlda3 <- predict(convicted_lda3, newdata = testdata)
convicted_lda3b <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + verbal_IQ + nonverbal_IQ + school_results, data = traindata, CV = TRUE)
predlda3 <- predict(convicted_lda3, newdata = testdata)
predlda3 <- predict(convicted_lda3b, newdata = testdata)
predictiveaccuracy(convicted_lda2,testdata)
library(psych)
library(tidyverse)
library(haven)
library(magrittr)
library(MASS)
library(gridExtra) #Please install if you do not have this package.
library(vcd)
library(caret)
library(tidyr)
delinquency.dat <- read_spss("Cambridge_delinquency.sav")
convict.dat <- read_spss("conviction_data.sav")
summary(convict.dat)
delinqreduced <- delinquency.dat %>%
dplyr::select(v300, v301, v92, v69, v134, v123, v180, v108, v195, v237, v277, v279, v310, v254, v283) %>% #selects variables
rename(crimrec_parents = v300, delinq_siblings = v301, family_income = v92, family_size = v69, broken_home = v134, physical_neglect = v123, authoratarianism_style = v180 , obedience_boy = v108, daringness_boy = v195, nervousness_boy =  v237, troublesomeness = v277, teacher_rating_naughty = v279, school_results = v310, nonverbal_IQ = v254, verbal_IQ = v283) #renames each variable
str(delinqreduced)
delinqreduced <- add_rownames(delinqreduced, "icpsr_seq_id_number")
wideconvict.dat <- convict.dat %>%
spread(key = agecat, value = convicted) #create a wide version of conviction data, such that we have 411 rows.
wideconvict.dat$icpsr_seq_id_number <- as.character(wideconvict.dat$icpsr_seq_id_number) #change to character vector suitable for join
crime.dat <- left_join(delinqreduced, wideconvict.dat, by = "icpsr_seq_id_number") #create new composite data-set
crime.dat %<>% drop_na(convicted_as_juvenile, convicted_as_adult) #drop cases with NA values for convictions. Given only 13 cases are dropped we drop these cases listwise.
for (i in 17:23) { #shuffle through conviction columns
crime.dat[,i] <- crime.dat[,i] - 1  #take off 1 for each value, i.e. 2 -> 1 and 1 -> 0
}
crime.dat$convicted <- as.numeric((crime.dat$convicted_as_juvenile + crime.dat$convicted_as_adult) > 0)
for (i in 1:16) {
crime.dat[,i] <- as.numeric(unlist(crime.dat[,i]))
}
set.seed(1)
traindata <- dplyr::sample_frac(crime.dat, 0.75)
testdata <- dplyr::setdiff(crime.dat, traindata)
Family_Income <- table(traindata$family_income, traindata$convicted)
Broken_Home <- table(traindata$broken_home, traindata$convicted)
mosaicplot(Family_Income, color = "blue")
mosaicplot(Broken_Home, color = "green")
Parent_Record <- table(traindata$crimrec_parents, traindata$convicted)
Sibling_Delinquency <- table(traindata$delinq_siblings, traindata$convicted)
mosaicplot(Parent_Record, color = "red")
mosaicplot(Sibling_Delinquency, color = "green")
Physical_Neglect <- table(traindata$physical_neglect, traindata$convicted)
Authoritarianism <- table(traindata$authoratarianism_style, traindata$convicted)
mosaicplot(Physical_Neglect, color = "orange")
mosaicplot(Authoritarianism, color = "brown")
Family_Size <- table(traindata$family_size, traindata$convicted)
Broken_Home <- table(traindata$broken_home, traindata$convicted)
mosaicplot(Family_Size, color = "purple")
mosaicplot(Broken_Home, color = "blue")
Troublesomeness <- table(traindata$troublesomeness, traindata$convicted)
Obedience <- table(traindata$obedience_boy, traindata$convicted)
Daringness <- table(traindata$daringness_boy, traindata$convicted)
Nervousness <- table(traindata$nervousness_boy, traindata$convicted)
Teacher_Rating_Naughty <- table(traindata$teacher_rating_naughty, traindata$convicted)
mosaicplot(Troublesomeness, color = "red")
mosaicplot(Obedience, color = "brown")
mosaicplot(Daringness, color = "green")
mosaicplot(Nervousness, color = "pink")
mosaicplot(Teacher_Rating_Naughty, color = "blue")
Verbal_IQ <- table(traindata$verbal_IQ, traindata$convicted)
Non_Verbal_IQ <- table(traindata$nonverbal_IQ, traindata$convicted)
School_Results <- table(traindata$school_results, traindata$convicted)
mosaicplot(Verbal_IQ, color = "black")
mosaicplot(Non_Verbal_IQ, color = "white")
mosaicplot(School_Results, color = "grey")
convicted_lda1 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style, data = traindata)
predlda1 <- predict(convicted_lda1, newdata = testdata)
confusionMatrix(as.factor(predlda1$class), as.factor(testdata$convicted), positive = "1")
convicted_qda1 <- qda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style, data = traindata)
predqda1 <- predict(convicted_qda1, newdata = testdata)
c1 <- confusionMatrix(as.factor(predqda1$class), as.factor(testdata$convicted), positive = "1")
convicted_lda2 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + obedience_boy + daringness_boy + nervousness_boy + troublesomeness + teacher_rating_naughty, data = traindata)
predlda2 <- predict(convicted_lda2, newdata = testdata)
confusionMatrix(as.factor(predlda2$class), as.factor(testdata$convicted), positive = "1")
convicted_qda2 <- qda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + obedience_boy + daringness_boy + nervousness_boy + troublesomeness + teacher_rating_naughty, data = traindata)
predqda2 <- predict(convicted_qda2, newdata = testdata)
confusionMatrix(as.factor(predqda2$class), as.factor(testdata$convicted), positive = "1")
convicted_lda3 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + verbal_IQ + nonverbal_IQ + school_results, data = traindata)
convicted_lda3b <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + verbal_IQ + nonverbal_IQ + school_results, data = traindata)
predlda3 <- predict(convicted_lda3, newdata = testdata)
confusionMatrix(as.factor(predlda3$class), as.factor(testdata$convicted), positive = "1")
convicted_qda3 <- qda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + verbal_IQ + nonverbal_IQ + school_results, data = traindata)
predqda3 <- predict(convicted_qda3, newdata = testdata)
confusionMatrix(as.factor(predqda3$class), as.factor(testdata$convicted), positive = "1")
predictiveaccuracy = function(model,data) {
#function receives two inputs: one refers to the lda model, and the second is the data-set to which the predicted model will be applied.
suppressWarnings(p1 <- predict(model, newdata = data))
#predicted values from model are calculated in relation to new data-set
c1 <- confusionMatrix(as.factor(p1$class), as.factor(data$convicted), positive = "1")
#constructs a confusion matrix in order to get values of model accuracy
print(c1$byClass[1])
print(c1$byClass[2])
print(c1$byClass[11])
#fetches respective value for user
}
p1 <- predict(convicted_lda2, newdata = testdata)
predictiveaccuracy(convicted_lda2,testdata)
predictiveaccuracy(convicted_lda2,testdata)
convicted_qda2 <- qda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + obedience_boy + daringness_boy + nervousness_boy + troublesomeness + teacher_rating_naughty, data = traindata, cv = TRUE)
predqda2 <- predict(convicted_qda2, newdata = testdata)
confusionMatrix(as.factor(predqda2$class), as.factor(testdata$convicted), positive = "1")
convicted_qda2 <- qda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + obedience_boy + daringness_boy + nervousness_boy + troublesomeness + teacher_rating_naughty, data = traindata, cv = FALSE)
convicted_qda2 <- qda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + obedience_boy + daringness_boy + nervousness_boy + troublesomeness + teacher_rating_naughty, data = traindata, cv = FALSE)
predqda2 <- predict(convicted_qda2, newdata = testdata)
confusionMatrix(as.factor(predqda2$class), as.factor(testdata$convicted), positive = "1")
convicted_qda2 <- qda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + obedience_boy + daringness_boy + nervousness_boy + troublesomeness + teacher_rating_naughty, data = traindata, cv = TRUE)
predqda2 <- predict(convicted_qda2, newdata = testdata)
confusionMatrix(as.factor(predqda2$class), as.factor(testdata$convicted), positive = "1")
convicted_qda2 <- qda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + obedience_boy + daringness_boy + nervousness_boy + troublesomeness + teacher_rating_naughty, data = traindata, cv = FALSE)
predqda2 <- predict(convicted_qda2, newdata = testdata)
confusionMatrix(as.factor(predqda2$class), as.factor(testdata$convicted), positive = "1")
convicted_qda2 <- qda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + obedience_boy + daringness_boy + nervousness_boy + troublesomeness + teacher_rating_naughty, data = traindata, cv = TRUE)
predqda2 <- predict(convicted_qda2, newdata = testdata)
confusionMatrix(as.factor(predqda2$class), as.factor(testdata$convicted), positive = "1")
table(convicted_qda3$class, testdata$convicted)
table(convicted_qda3$class, traindata$convicted)
convicted_qda3$class
convicted_qda3 <- qda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + verbal_IQ + nonverbal_IQ + school_results, data = traindata)
predqda3 <- predict(convicted_qda3, newdata = testdata)
confusionMatrix(as.factor(predqda3$class), as.factor(testdata$convicted), positive = "1")
table(convicted_qda3$class, traindata$convicted)
convicted_lda3 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + verbal_IQ + nonverbal_IQ + school_results, data = traindata)
table(predqda3$class, traindata$convicted)
predqda3 <- predict(convicted_qda3, newdata = testdata)
convicted_lda1 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style, data = traindata)
convicted_lda1 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style, data = traindata)
convicted_lda1
predlda1 <- predict(convicted_lda1)
confusionMatrix(as.factor(predlda1$class), as.factor(testdata$convicted), positive = "1")
confusionMatrix(as.factor(predlda1$class), as.factor(traindata$convicted), positive = "1")
predlda1 <- predict(convicted_lda1)
confusionMatrix(as.factor(predlda1$class), as.factor(traindata$convicted), positive = "1")
predlda1 <- predict(convicted_lda1)
confusionMatrix(as.factor(predlda1$class), as.factor(traindata$convicted), positive = "1")
predlda1$class
traindata$convicted
convicted_lda1 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style, data = traindata)
convicted_lda1
predlda1 <- predict(convicted_lda1)
confusionMatrix(as.factor(predlda1$class), as.factor(traindata$convicted), positive = "1")
convicted_lda1 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style, data = traindata)
convicted_lda1
View(convicted_lda1)
View(traindata)
convicted_lda1
convicted_lda1 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style, data = traindata)
convicted_lda1
convicted_lda1 <- qda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style, data = traindata)
convicted_lda1
View(convicted_lda1)
convicted_lda1 <- qda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style, data = traindata)
convicted_lda1 <- qda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style, data = traindata)
convicted_lda1
predlda1 <- predict(convicted_lda1, newdata = traindata)
confusionMatrix(as.factor(predlda1$class), as.factor(traindata$convicted), positive = "1")
convictselec <- as.matrix(select(data = traindata, crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style))
convictselec <- as.matrix(select(data = traindata, crimrec_parents, delinq_siblings, family_income, family_size, broken_home, physical_neglect, authoratarianism_style))
convictselec <- as.matrix(select(data = traindata, c(crimrec_parents, delinq_siblings, family_income, family_size, broken_home, physical_neglect, authoratarianism_style)))
convictselec <- as.matrix(select(traindata, c(crimrec_parents, delinq_siblings, family_income, family_size, broken_home, physical_neglect, authoratarianism_style)))
convictselec <- traindata %>%
as.matrix(select(crimrec_parents, delinq_siblings, family_income, family_size, broken_home, physical_neglect, authoratarianism_style))
convictselec <- traindata %>%
as.matrix(dplyr::select(crimrec_parents, delinq_siblings, family_income, family_size, broken_home, physical_neglect, authoratarianism_style))
View(traindata)
as.matrix(dplyr::select(crimrec_parents)
convictselec <- traindata %>%
convictselec <- traindata %>%
as.matrix(dplyr::select(crimrec_parents, delinq_siblings, family_income, family_size, broken_home, physical_neglect, authoratarianism_style))
convictselec <- traindata %>%
as.matrix(dplyr::select(crimrec_parents, delinq_siblings, family_income, family_size, broken_home, physical_neglect, authoratarianism_style))
convictselect <- traindata %>%
dplyr::select(crimrec_parents, delinq_siblings, family_income, family_size, broken_home, physical_neglect, authoratarianism_style)
as.matric(convictselect) <- traindata %>%
dplyr::select(crimrec_parents, delinq_siblings, family_income, family_size, broken_home, physical_neglect, authoratarianism_style)
as.matrix(convictselect) <- traindata %>%
dplyr::select(crimrec_parents, delinq_siblings, family_income, family_size, broken_home, physical_neglect, authoratarianism_style)
convictselect <- as.matrix(convictselect)
summary(manova(convictselect ~ traindata$convicted), test = "Wilks")
convicted_lda1 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style, data = traindata, CV = TRUE)
convicted_lda1
predlda1 <- predict(convicted_lda1, newdata = traindata)
confusionMatrix(as.factor(predlda1$class), as.factor(traindata$convicted), positive = "1")
convicted_lda1 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style, data = traindata)
predlda1 <- predict(convicted_lda1, newdata = traindata)
confusionMatrix(as.factor(predlda1$class), as.factor(traindata$convicted), positive = "1")
convicted_lda2 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style, data = traindata)
convicted_lda2
convicted_lda2 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + obedience_boy + daringness_boy + nervousness_boy + troublesomeness + teacher_rating_naughty, data = traindata)
convicted_lda2
convicted_lda2 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + obedience_boy + daringness_boy + nervousness_boy + troublesomeness + teacher_rating_naughty, data = traindata)
convicted_lda2
predlda2 <- predict(convicted_lda2, newdata = traindata)
predlda2 <- predict(convicted_lda2, newdata = traindata)
confusionMatrix(as.factor(predlda2$class), as.factor(traindata$convicted), positive = "1")
suppressWarnings(predlda2 <- predict(convicted_lda2, newdata = traindata))
confusionMatrix(as.factor(predlda2$class), as.factor(traindata$convicted), positive = "1")
convictselect <- traindata %>% #only select variables of interest
dplyr::select(crimrec_parents, delinq_siblings, family_income, family_size, broken_home, physical_neglect, authoratarianism_style, obedience_boy, daringness_boy, nervousness_boy, troublesomeness, teacher_rating_naughty)
convictselect <- as.matrix(convictselect) #convert to matrix
summary(manova(convictselect ~ traindata$convicted), test = "Wilks") #Wilk test of significance.
convicted_lda3 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + verbal_IQ + nonverbal_IQ + school_results, data = traindata)
convicted_lda3
predqda3 <- predict(convicted_qda3, newdata = testdata)
confusionMatrix(as.factor(predqda3$class), as.factor(testdata$convicted), positive = "1")
predqda3 <- predict(convicted_qda3, newdata = traindata)
predqda3 <- suppressWarnings(predict(convicted_qda3, newdata = traindata))
confusionMatrix(as.factor(predqda3$class), as.factor(testdata$convicted), positive = "1")
confusionMatrix(as.factor(predqda3$class), as.factor(traindata$convicted), positive = "1")
predlda1 <- predict(convicted_lda1, newdata = traindata)
confusionMatrix(as.factor(predlda1$class), as.factor(traindata$convicted), positive = "1")
convicted_lda1 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style, data = traindata)
convicted_lda1
predlda1 <- predict(convicted_lda1, newdata = traindata)
confusionMatrix(as.factor(predlda1$class), as.factor(traindata$convicted), positive = "1")
confusionMatrix(as.factor(predlda1$class), as.factor(traindata$convicted), positive = "1")
confusionMatrix(as.factor(predlda1$class), as.factor(traindata$convicted), positive = "1")
predlda1 <- predict(convicted_lda1, newdata = traindata)
confusionMatrix(as.factor(predlda1$class), as.factor(traindata$convicted), positive = "1")
predlda1 <- predict(convicted_lda1, newdata = traindata)
predlda1 <- suppressWarnings(predict(convicted_lda1, newdata = traindata))
confusionMatrix(as.factor(predlda1$class), as.factor(traindata$convicted), positive = "1")
confusionMatrix(as.factor(predlda1$class), as.factor(traindata$convicted), positive = "1")
confusionMatrix(as.factor(predlda1$class), as.factor(traindata$convicted), positive = "1")
predlda1 <- suppressWarnings(predict(convicted_lda1, newdata = traindata))
convicted_lda1 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style, data = traindata)
convicted_lda1
predlda1 <- suppressWarnings(predict(convicted_lda1, newdata = traindata))
confusionMatrix(as.factor(predlda1$class), as.factor(traindata$convicted), positive = "1")
confusionMatrix(as.factor(predlda1$class), as.factor(traindata$convicted), positive = "1")
convicted_lda3 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + verbal_IQ + nonverbal_IQ + school_results, data = traindata)
convicted_lda3
predqda3 <- suppressWarnings(predict(convicted_qda3, newdata = traindata))
confusionMatrix(as.factor(predqda3$class), as.factor(traindata$convicted), positive = "1")
predqda3 <- suppressWarnings(predict(convicted_qda3, newdata = traindata))
confusionMatrix(as.factor(predqda3$class), as.factor(traindata$convicted), positive = "1")
predqda3 <- suppressWarnings(predict(convicted_qda3, newdata = traindata))
convicted_lda3 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + verbal_IQ + nonverbal_IQ + school_results, data = traindata)
convicted_lda3
predlda3 <- suppressWarnings(predict(convicted_lda3, newdata = traindata))
confusionMatrix(as.factor(predlda3$class), as.factor(traindata$convicted), positive = "1")
library(psych)
library(tidyverse)
library(haven)
library(magrittr)
library(MASS)
library(gridExtra) #Please install if you do not have this package.
library(vcd)
library(caret)
library(tidyr)
delinquency.dat <- read_spss("Cambridge_delinquency.sav")
convict.dat <- read_spss("conviction_data.sav")
summary(convict.dat)
delinqreduced <- delinquency.dat %>%
dplyr::select(v300, v301, v92, v69, v134, v123, v180, v108, v195, v237, v277, v279, v310, v254, v283) %>% #selects variables
rename(crimrec_parents = v300, delinq_siblings = v301, family_income = v92, family_size = v69, broken_home = v134, physical_neglect = v123, authoratarianism_style = v180 , obedience_boy = v108, daringness_boy = v195, nervousness_boy =  v237, troublesomeness = v277, teacher_rating_naughty = v279, school_results = v310, nonverbal_IQ = v254, verbal_IQ = v283) #renames each variable
str(delinqreduced)
delinqreduced <- add_rownames(delinqreduced, "icpsr_seq_id_number")
wideconvict.dat <- convict.dat %>%
spread(key = agecat, value = convicted) #create a wide version of conviction data, such that we have 411 rows.
wideconvict.dat$icpsr_seq_id_number <- as.character(wideconvict.dat$icpsr_seq_id_number) #change to character vector suitable for join
crime.dat <- left_join(delinqreduced, wideconvict.dat, by = "icpsr_seq_id_number") #create new composite data-set
crime.dat %<>% drop_na(convicted_as_juvenile, convicted_as_adult) #drop cases with NA values for convictions. Given only 13 cases are dropped we drop these cases listwise.
for (i in 17:23) { #shuffle through conviction columns
crime.dat[,i] <- crime.dat[,i] - 1  #take off 1 for each value, i.e. 2 -> 1 and 1 -> 0
}
crime.dat$convicted <- as.numeric((crime.dat$convicted_as_juvenile + crime.dat$convicted_as_adult) > 0)
for (i in 1:16) {
crime.dat[,i] <- as.numeric(unlist(crime.dat[,i]))
}
set.seed(1)
traindata <- dplyr::sample_frac(crime.dat, 0.75)
testdata <- dplyr::setdiff(crime.dat, traindata)
Family_Income <- table(traindata$family_income, traindata$convicted)
Broken_Home <- table(traindata$broken_home, traindata$convicted)
mosaicplot(Family_Income, color = "blue")
mosaicplot(Broken_Home, color = "green")
Parent_Record <- table(traindata$crimrec_parents, traindata$convicted)
Sibling_Delinquency <- table(traindata$delinq_siblings, traindata$convicted)
mosaicplot(Parent_Record, color = "red")
mosaicplot(Sibling_Delinquency, color = "green")
Physical_Neglect <- table(traindata$physical_neglect, traindata$convicted)
Authoritarianism <- table(traindata$authoratarianism_style, traindata$convicted)
mosaicplot(Physical_Neglect, color = "orange")
mosaicplot(Authoritarianism, color = "brown")
Family_Size <- table(traindata$family_size, traindata$convicted)
Broken_Home <- table(traindata$broken_home, traindata$convicted)
mosaicplot(Family_Size, color = "purple")
mosaicplot(Broken_Home, color = "blue")
Troublesomeness <- table(traindata$troublesomeness, traindata$convicted)
Obedience <- table(traindata$obedience_boy, traindata$convicted)
Daringness <- table(traindata$daringness_boy, traindata$convicted)
Nervousness <- table(traindata$nervousness_boy, traindata$convicted)
Teacher_Rating_Naughty <- table(traindata$teacher_rating_naughty, traindata$convicted)
mosaicplot(Troublesomeness, color = "red")
mosaicplot(Obedience, color = "brown")
mosaicplot(Daringness, color = "green")
mosaicplot(Nervousness, color = "pink")
mosaicplot(Teacher_Rating_Naughty, color = "blue")
Verbal_IQ <- table(traindata$verbal_IQ, traindata$convicted)
Non_Verbal_IQ <- table(traindata$nonverbal_IQ, traindata$convicted)
School_Results <- table(traindata$school_results, traindata$convicted)
mosaicplot(Verbal_IQ, color = "black")
mosaicplot(Non_Verbal_IQ, color = "white")
mosaicplot(School_Results, color = "grey")
convicted_lda1 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style, data = traindata)
convicted_lda1
predlda1 <- suppressWarnings(predict(convicted_lda1, newdata = traindata))
confusionMatrix(as.factor(predlda1$class), as.factor(traindata$convicted), positive = "1")
convictselect <- traindata %>% #only select variables of interest
dplyr::select(crimrec_parents, delinq_siblings, family_income, family_size, broken_home, physical_neglect, authoratarianism_style)
convictselect <- as.matrix(convictselect) #convert to matrix
summary(manova(convictselect ~ traindata$convicted), test = "Wilks") #Wilk test of significance.
convicted_lda2 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + obedience_boy + daringness_boy + nervousness_boy + troublesomeness + teacher_rating_naughty, data = traindata)
convicted_lda2
suppressWarnings(predlda2 <- predict(convicted_lda2, newdata = traindata))
confusionMatrix(as.factor(predlda2$class), as.factor(traindata$convicted), positive = "1")
convictselect <- traindata %>% #only select variables of interest
dplyr::select(crimrec_parents, delinq_siblings, family_income, family_size, broken_home, physical_neglect, authoratarianism_style, obedience_boy, daringness_boy, nervousness_boy, troublesomeness, teacher_rating_naughty)
convictselect <- as.matrix(convictselect) #convert to matrix
summary(manova(convictselect ~ traindata$convicted), test = "Wilks") #Wilk test of significance.
convicted_lda2 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + obedience_boy + daringness_boy + nervousness_boy + troublesomeness + teacher_rating_naughty, data = traindata)
convicted_qda2 <- qda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + obedience_boy + daringness_boy + nervousness_boy + troublesomeness + teacher_rating_naughty, data = traindata)
convicted_lda3 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + verbal_IQ + nonverbal_IQ + school_results, data = traindata)
convicted_lda3
predlda3 <- suppressWarnings(predict(convicted_lda3, newdata = traindata))
confusionMatrix(as.factor(predlda3$class), as.factor(traindata$convicted), positive = "1")
predictiveaccuracy = function(model,data) {
#function receives two inputs: one refers to the lda model, and the second is the data-set to which the predicted model will be applied.
suppressWarnings(p1 <- predict(model, newdata = data))
#predicted values from model are calculated in relation to new data-set
c1 <- confusionMatrix(as.factor(p1$class), as.factor(data$convicted), positive = "1")
#constructs a confusion matrix in order to get values of model accuracy
print(c1$byClass[1])
print(c1$byClass[2])
print(c1$byClass[11])
#fetches respective value for user
}
p1 <- predict(convicted_lda2, newdata = testdata)
predictiveaccuracy(convicted_lda2,testdata)
predictiveaccuracy(convicted_lda2,testdata)
library(psych)
library(tidyverse)
library(haven)
library(magrittr)
library(MASS)
library(gridExtra) #Please install if you do not have this package.
library(vcd)
library(caret)
library(tidyr)
delinquency.dat <- read_spss("Cambridge_delinquency.sav")
convict.dat <- read_spss("conviction_data.sav")
summary(convict.dat)
delinqreduced <- delinquency.dat %>%
dplyr::select(v300, v301, v92, v69, v134, v123, v180, v108, v195, v237, v277, v279, v310, v254, v283) %>% #selects variables
rename(crimrec_parents = v300, delinq_siblings = v301, family_income = v92, family_size = v69, broken_home = v134, physical_neglect = v123, authoratarianism_style = v180 , obedience_boy = v108, daringness_boy = v195, nervousness_boy =  v237, troublesomeness = v277, teacher_rating_naughty = v279, school_results = v310, nonverbal_IQ = v254, verbal_IQ = v283) #renames each variable
str(delinqreduced)
delinqreduced <- add_rownames(delinqreduced, "icpsr_seq_id_number")
wideconvict.dat <- convict.dat %>%
spread(key = agecat, value = convicted) #create a wide version of conviction data, such that we have 411 rows.
wideconvict.dat$icpsr_seq_id_number <- as.character(wideconvict.dat$icpsr_seq_id_number) #change to character vector suitable for join
crime.dat <- left_join(delinqreduced, wideconvict.dat, by = "icpsr_seq_id_number") #create new composite data-set
crime.dat %<>% drop_na(convicted_as_juvenile, convicted_as_adult) #drop cases with NA values for convictions. Given only 13 cases are dropped we drop these cases listwise.
for (i in 17:23) { #shuffle through conviction columns
crime.dat[,i] <- crime.dat[,i] - 1  #take off 1 for each value, i.e. 2 -> 1 and 1 -> 0
}
crime.dat$convicted <- as.numeric((crime.dat$convicted_as_juvenile + crime.dat$convicted_as_adult) > 0)
for (i in 1:16) {
crime.dat[,i] <- as.numeric(unlist(crime.dat[,i]))
}
set.seed(1)
traindata <- dplyr::sample_frac(crime.dat, 0.75)
testdata <- dplyr::setdiff(crime.dat, traindata)
Family_Income <- table(traindata$family_income, traindata$convicted)
Broken_Home <- table(traindata$broken_home, traindata$convicted)
mosaicplot(Family_Income, color = "blue")
mosaicplot(Broken_Home, color = "green")
Parent_Record <- table(traindata$crimrec_parents, traindata$convicted)
Sibling_Delinquency <- table(traindata$delinq_siblings, traindata$convicted)
mosaicplot(Parent_Record, color = "red")
mosaicplot(Sibling_Delinquency, color = "green")
Physical_Neglect <- table(traindata$physical_neglect, traindata$convicted)
Authoritarianism <- table(traindata$authoratarianism_style, traindata$convicted)
mosaicplot(Physical_Neglect, color = "orange")
mosaicplot(Authoritarianism, color = "brown")
Family_Size <- table(traindata$family_size, traindata$convicted)
Broken_Home <- table(traindata$broken_home, traindata$convicted)
mosaicplot(Family_Size, color = "purple")
mosaicplot(Broken_Home, color = "blue")
Troublesomeness <- table(traindata$troublesomeness, traindata$convicted)
Obedience <- table(traindata$obedience_boy, traindata$convicted)
Daringness <- table(traindata$daringness_boy, traindata$convicted)
Nervousness <- table(traindata$nervousness_boy, traindata$convicted)
Teacher_Rating_Naughty <- table(traindata$teacher_rating_naughty, traindata$convicted)
mosaicplot(Troublesomeness, color = "red")
mosaicplot(Obedience, color = "brown")
mosaicplot(Daringness, color = "green")
mosaicplot(Nervousness, color = "pink")
mosaicplot(Teacher_Rating_Naughty, color = "blue")
Verbal_IQ <- table(traindata$verbal_IQ, traindata$convicted)
Non_Verbal_IQ <- table(traindata$nonverbal_IQ, traindata$convicted)
School_Results <- table(traindata$school_results, traindata$convicted)
mosaicplot(Verbal_IQ, color = "black")
mosaicplot(Non_Verbal_IQ, color = "white")
mosaicplot(School_Results, color = "grey")
convicted_lda1 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style, data = traindata)
convicted_lda1
predlda1 <- suppressWarnings(predict(convicted_lda1, newdata = traindata))
confusionMatrix(as.factor(predlda1$class), as.factor(traindata$convicted), positive = "1")
convictselect <- traindata %>% #only select variables of interest
dplyr::select(crimrec_parents, delinq_siblings, family_income, family_size, broken_home, physical_neglect, authoratarianism_style)
convictselect <- as.matrix(convictselect) #convert to matrix
summary(manova(convictselect ~ traindata$convicted), test = "Wilks") #Wilk test of significance.
convicted_lda2 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + obedience_boy + daringness_boy + nervousness_boy + troublesomeness + teacher_rating_naughty, data = traindata)
convicted_lda2
suppressWarnings(predlda2 <- predict(convicted_lda2, newdata = traindata))
confusionMatrix(as.factor(predlda2$class), as.factor(traindata$convicted), positive = "1")
convictselect <- traindata %>% #only select variables of interest
dplyr::select(crimrec_parents, delinq_siblings, family_income, family_size, broken_home, physical_neglect, authoratarianism_style, obedience_boy, daringness_boy, nervousness_boy, troublesomeness, teacher_rating_naughty)
convictselect <- as.matrix(convictselect) #convert to matrix
summary(manova(convictselect ~ traindata$convicted), test = "Wilks") #Wilk test of significance.
convicted_lda2 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + obedience_boy + daringness_boy + nervousness_boy + troublesomeness + teacher_rating_naughty, data = traindata)
convicted_qda2 <- qda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + obedience_boy + daringness_boy + nervousness_boy + troublesomeness + teacher_rating_naughty, data = traindata)
convicted_lda3 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + verbal_IQ + nonverbal_IQ + school_results, data = traindata)
convicted_lda3
predlda3 <- suppressWarnings(predict(convicted_lda3, newdata = traindata))
confusionMatrix(as.factor(predlda3$class), as.factor(traindata$convicted), positive = "1")
predictiveaccuracy = function(model,data) {
#function receives two inputs: one refers to the lda model, and the second is the data-set to which the predicted model will be applied.
suppressWarnings(p1 <- predict(model, newdata = data))
#predicted values from model are calculated in relation to new data-set
c1 <- confusionMatrix(as.factor(p1$class), as.factor(data$convicted), positive = "1")
#constructs a confusion matrix in order to get values of model accuracy
print(c1$byClass[1])
print(c1$byClass[2])
print(c1$byClass[11])
#fetches respective value for user
}
p1 <- predict(convicted_lda2, newdata = testdata)
predictiveaccuracy(convicted_lda2,testdata)
predictiveaccuracy(convicted_lda2,testdata)
convicted_lda3 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + verbal_IQ + nonverbal_IQ + school_results, data = traindata)
convicted_lda3
predlda3 <- suppressWarnings(predict(convicted_lda3, newdata = traindata))
confusionMatrix(as.factor(predlda3$class), as.factor(traindata$convicted), positive = "1")
convictselect <- traindata %>% #only select variables of interest
dplyr::select(crimrec_parents, delinq_siblings, family_income, family_size, broken_home, physical_neglect, authoratarianism_style, obedience_boy, daringness_boy, nervousness_boy, troublesomeness, teacher_rating_naughty, verbal_IQ, nonverbal_IQ, school_results)
convictselect <- as.matrix(convictselect) #convert to matrix
predictiveaccuracy = function(model,data) {
#function receives two inputs: one refers to the lda model, and the second is the data-set to which the predicted model will be applied.
suppressWarnings(p1 <- predict(model, newdata = data))
#predicted values from model are calculated in relation to new data-set
c1 <- confusionMatrix(as.factor(p1$class), as.factor(data$convicted), positive = "1")
#constructs a confusion matrix in order to get values of model accuracy
print(c1$byClass[1])
print(c1$byClass[2])
print(c1$byClass[11])
#fetches respective value for user
}
predictiveaccuracy(convicted_lda1,testdata)
predictiveaccuracy(convicted_lda2,testdata)
predictiveaccuracy(convicted_lda3,testdata)
predictiveaccuracy(convicted_lda1,testdata)
predictiveaccuracy(convicted_lda2,testdata)
predictiveaccuracy(convicted_lda3,testdata)
predictiveaccuracy(convicted_lda1,testdata)
predictiveaccuracy(convicted_lda2,testdata)
predictiveaccuracy(convicted_lda3,testdata)
predictiveaccuracy(convicted_lda1,testdata)
predictiveaccuracy(convicted_lda2,testdata)
predictiveaccuracy(convicted_lda3,testdata)
predictiveaccuracy(convicted_lda2,testdata)
predictiveaccuracy(convicted_lda3,testdata)
convicted_lda1 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + verbal_IQ + nonverbal_IQ + school_results, data = traindata, CV = TRUE)
convicted_lda3CV <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + verbal_IQ + nonverbal_IQ + school_results, data = traindata, CV = TRUE)
convicted_lda3cv
convicted_lda3cv <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + verbal_IQ + nonverbal_IQ + school_results, data = traindata, CV = TRUE)
convicted_lda3cv
predtable <- table(convicted_lda3cv$class, traindata$convicted)
predict(convicted_lda3cv, newdata = training)
convicted_lda3cv <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + verbal_IQ + nonverbal_IQ + school_results, data = traindata, CV = TRUE, na.action = "na.pass")
convicted_lda3cv <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + verbal_IQ + nonverbal_IQ + school_results, data = traindata, CV = TRUE, na.action)
convicted_lda3cv <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + verbal_IQ + nonverbal_IQ + school_results, data = traindata, CV = TRUE, na.action = FALSE)
convicted_lda3cv <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + verbal_IQ + nonverbal_IQ + school_results, data = traindata, CV = TRUE)
convicted_lda3cv <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + verbal_IQ + nonverbal_IQ + school_results, data = traindata, CV = TRUE)
convicted_lda3cv
convicted_lda3cv <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style + verbal_IQ + nonverbal_IQ + school_results, data = traindata, CV = TRUE, na.action = na.omit)
convicted_lda3cv
predict(convicted_lda3cv, newdata = training)
predict(convicted_lda3cv$posterior, newdata = training)
convicted_lda3
crime.dat %<>% drop_na() #drop cases with NA values for convictions. Given only 13 cases are dropped we drop these cases listwise.
convicted_lda1 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style, data = crime.dat, cv = TRUE)
convicted_lda1
p1 <- predict(convicted_lda1)
confusionMatrix(convicted_lda1$class,crime.dat$convicted)
convicted_lda1$class
convicted_lda1 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style, data = crime.dat, cv = TRUE)
convicted_lda1
predict(convicted_lda1)
convicted_lda1 <- lda(convicted ~ crimrec_parents + delinq_siblings + family_income + family_size + broken_home + physical_neglect + authoratarianism_style, data = crime.dat, cv = TRUE)
convicted_lda1
predict(convicted_lda1)
convicted_lda1$
predict(convicted_lda1, newdata = crime.dat)
predtable <- table(convicted_lda1$class, iris$Species)
predtable <- table(convicted_lda1$class, crime.dat$convicted)
convicted_lda1$class
convicted_lda1$class
